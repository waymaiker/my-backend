// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubscriptionType {
  FREEMIUM
  PREMIUM
}

enum Language {
  FRENCH
  ENGLISH
  WOLOF
}

enum UserType {
  SUPER_ADMIN
  ADMIN
  USER
}

model User {
  id                    String @id @default(uuid())
  pseudo                String @unique
  phone                 String
  email                 String @unique
  password              String
  profile_language      Language
  finished_level        Int
  scope                 SubscriptionType
  user_type             UserType
  created_at            DateTime @default(now())
  updated_at            DateTime @default(now())
  groups                AdminsGroup[]
  followings            FollowersGroup[]
  // chapter_progressions  ChapterProgression[]
  // user_messages         Message[] @relation("user_messages")
}

model Group {
  id                    Int @id @default(autoincrement())
  name                  String  @unique
  description           String
  is_public             Boolean @default(false)
  restricted_access     Boolean @default(true)
  creator_id            String
  admins                AdminsGroup[]
  followers             FollowersGroup[]
  created_at            DateTime @default(now())
  updated_at            DateTime @default(now())
}

model AdminsGroup {
  @@id([group_id, user_id])
  group                 Group @relation(fields: [group_id], references: [id])
  group_id              Int
  user                  User @relation(fields: [user_id], references: [id])
  user_id               String
  assigned_at           DateTime @default(now())
  assigned_by           String
}

model FollowersGroup {
  @@id([group_id, user_id])
  group                 Group @relation(fields: [group_id], references: [id])
  group_id              Int
  user                  User @relation(fields: [user_id], references: [id])
  user_id               String
  created_at            DateTime @default(now())
}

// model Chapter {
//   id                    Int @id @default(autoincrement())
//   name                  String
//   max_level             String
//   exercises             Int[]
//   scope                 SubscriptionType
//   created_at            DateTime @default(now())
//   updated_at            DateTime @default(now())
//   chapter_progressions  ChapterProgression[]
// }

// model ChapterProgression {
//   id                Int @id @default(autoincrement())
//   chapter_id        Int
//   user_id           String
//   chapter           Chapter @relation(fields: [chapter_id], references: [id])
//   user              User @relation(fields: [user_id], references: [id])
//   created_at        DateTime @default(now())
//   updated_at        DateTime @default(now())
// }

// model Message {
//   id                Int @id @default(autoincrement())
//   name              String
//   user_id           String
//   user              User @relation("user_messages", fields: [user_id], references: [id])
//   created_at        DateTime @default(now())
// }